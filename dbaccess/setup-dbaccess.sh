#!/bin/bash

######################################################################
# SCRIPT:      setup-dbaccess.sh
# DESCRI√á√ÉO:   Inicializa e configura o servi√ßo TOTVS DBAccess.
# AUTOR:       Julian de Almeida Santos
# DATA:        2025-10-18
#
# VARIAVEIS DE AMBIENTE REQUERIDAS:
# - DATABASE_PROFILE....: Define o SGBD a ser configurado (MSSQL ou POSTGRES).
# - DATABASE_ALIAS      : Define Alias ODBC.
# - DATABASE_SERVER     : Define host para o Servidor de Banco de Dados.
# - DATABASE_PORT       : Define porta para o Servidor de Banco de Dados.
# - DATABASE_NAME       : Define nome do Banco de Dados.
# - DATABASE_USERNAME   : Define usu√°rio para o Servidor de Banco de Dados.
# - DATABASE_PASSWORD   : Define senha para o Servidor de Banco de Dados.
#
######################################################################

title="TOTVS DBAccess 23.1.1.4"
prog="dbaccess64"
pathbin="/totvs/dbaccess/multi"
progbin="${pathbin}/${prog}"
inifile="${pathbin}/dbaccess.ini"
export LD_LIBRARY_PATH="${pathbin}:${LD_LIBRARY_PATH}"

#---------------------------------------------------------------------

## üöÄ FUN√áOES AUXILIARES

    # Define a fun√ß√£o de tratamento de erro para vari√°veis de ambiente
    check_env_vars() {
        local var_name=$1
        if [[ -z "${!var_name}" ]]; then
            echo "‚ùå ERRO: A vari√°vel de ambiente **${var_name}** n√£o est√° definida. O script ser√° encerrado."
            exit 1
        fi
    }

#---------------------------------------------------------------------

## üöÄ IN√çCIO DA VERIFICA√á√ÉO DE VARI√ÅVEIS DE AMBIENTE

    echo ""
    echo "------------------------------------------------------"
    echo "üöÄ IN√çCIO DA VERIFICA√á√ÉO DE V√ÅRIAVEIS DE AMBIENTE"
    echo "------------------------------------------------------"

    echo "üîé Verificando v√°riaveis de ambiente requeridas..."

    check_env_vars "DATABASE_PROFILE"
    echo "üîé DATABASE_PROFILE... ‚úÖ"

    check_env_vars "DATABASE_SERVER"
    echo "üîé DATABASE_SERVER... ‚úÖ"

    check_env_vars "DATABASE_PORT"
    echo "üîé DATABASE_PORT... ‚úÖ"

    check_env_vars "DATABASE_ALIAS"
    echo "üîé DATABASE_ALIAS... ‚úÖ"

    check_env_vars "DATABASE_NAME"
    echo "üîé DATABASE_NAME... ‚úÖ"

    check_env_vars "DATABASE_USERNAME"
    echo "üîé DATABASE_USERNAME... ‚úÖ"

    check_env_vars "DATABASE_PASSWORD"
    echo "üîé DATABASE_PASSWORD... ‚úÖ"

    echo "‚úÖ Todas as vari√°veis de ambiente requeridas verificadas com sucesso."

#---------------------------------------------------------------------

## üöÄ IN√çCIO DA CONFIGURA√á√ÉO DO DBACCESS.INI

    echo ""
    echo "------------------------------------------------------"
    echo "üöÄ IN√çCIO DA CONFIGURA√á√ÉO DO DBACCESS.INI"
    echo "------------------------------------------------------"
    echo "‚öôÔ∏è Iniciando configura√ß√£o do arquivo .ini..."

    if [[ ! -f "/totvs/resources/settings/dbaccess.ini" ]]; then
        echo "‚ùå ERRO: Arquivo de configura√ß√£o **dbaccess.ini** n√£o encontrado em /totvs/resources/settings. O script ser√° encerrado."
        exit 1
    fi

    cp -f /totvs/resources/settings/dbaccess.ini "$inifile"
    echo "‚úÖ Arquivo base copiado para **$inifile**."

    echo "‚öôÔ∏è Aplicando substitui√ß√µes de vari√°veis..."
    sed -i "s,DBACCESS_LICENSE_SERVER,${DBACCESS_LICENSE_SERVER},g" "$inifile"
    sed -i "s,DBACCESS_LICENSE_PORT,${DBACCESS_LICENSE_PORT},g" "$inifile"
    sed -i "s,DBACCESS_CONSOLEFILE,${DBACCESS_CONSOLEFILE},g" "$inifile"
    sed -i "s,DATABASE_CLIENT_LIBRARY_MSSQL,${DATABASE_CLIENT_LIBRARY_MSSQL},g" "$inifile"
    sed -i "s,DATABASE_CLIENT_LIBRARY_POSTGRES,${DATABASE_CLIENT_LIBRARY_POSTGRES},g" "$inifile"
    
    echo "‚úÖ Vari√°veis substitu√≠das no $inifile."

#---------------------------------------------------------------------

## üöÄ IN√çCIO DA CONFIGURA√á√ÉO DO DBACCESS

    echo ""
    echo "------------------------------------------------------"
    echo "üöÄ IN√çCIO DA CONFIGURA√á√ÉO DO DBACCESS"
    echo "------------------------------------------------------"

    if [[ ! -x "/totvs/dbaccess/tools/dbaccesscfg" ]]; then
        echo "‚ùå ERRO: Ferramenta **dbaccesscfg** n√£o encontrada ou sem permiss√£o de execu√ß√£o. O script ser√° encerrado."
        exit 1
    fi

    echo "‚öôÔ∏è Configurando alias do DBAccess usando dbaccesscfg..."
    cd /totvs/dbaccess/multi/

    case "${DATABASE_PROFILE}" in
        MSSQL)
            echo "‚öôÔ∏è Executando dbaccesscfg para MSSQL..."
            /totvs/dbaccess/tools/dbaccesscfg -u "${DATABASE_USERNAME}" -p "${DATABASE_PASSWORD}" -d mssql -a "${DATABASE_ALIAS}"
            if [ $? -eq 0 ]; then
                echo "‚úÖ Configura√ß√£o MSSQL do DBAccess conclu√≠da para o alias **${DATABASE_ALIAS}**."
            else
                echo "‚ùå ERRO ao configurar MSSQL com dbaccesscfg. O script ser√° encerrado."
                exit 1
            fi
            ;;
        POSTGRES)
            echo "‚öôÔ∏è Executando dbaccesscfg para POSTGRES..."
            /totvs/dbaccess/tools/dbaccesscfg -u "${DATABASE_USERNAME}" -p "${DATABASE_PASSWORD}" -d postgres -a "${DATABASE_ALIAS}"
            if [ $? -eq 0 ]; then
                echo "‚úÖ Configura√ß√£o PostgreSQL do DBAccess conclu√≠da para o alias **${DATABASE_ALIAS}**."
            else
                echo "‚ùå ERRO ao configurar PostgreSQL com dbaccesscfg. O script ser√° encerrado."
                exit 1
            fi
            ;;
        *)
            echo "‚ùå ERRO: Profile de banco de dados inv√°lido (**${DATABASE_PROFILE}**) ou n√£o suportado (apenas MSSQL ou POSTGRES). O script ser√° encerrado."
            exit 1
            ;;
    esac

    cd /totvs
    echo "‚úÖ Fim da configura√ß√£o do DBAccess."

#---------------------------------------------------------------------

## üöÄ CONFIGURA√á√ÉO DE LIMITES (ULIMIT)

    echo ""
    echo "------------------------------------------------------"
    echo "üöÄ IN√çCIO DA CONFIGURA√á√ÉO DE LIMITES (ULIMIT)"
    echo "------------------------------------------------------"

    echo "‚öôÔ∏è Aplicando limites de recursos (ulimit)..."

    ulimit -n 65536            # open files
    ulimit -s 1024             # stack size
    ulimit -c unlimited        # core file size
    ulimit -f unlimited        # file size
    ulimit -t unlimited        # cpu time
    ulimit -v unlimited        # virtual memory

    echo "‚úÖ Limites aplicados com sucesso."

#---------------------------------------------------------------------

## üöÄ IN√çCIO DA INICIALIZA√á√ÉO DO SERVI√áO

    echo ""
    echo "------------------------------------------------------"
    echo "üöÄ IN√çCIO DA INICIALIZA√á√ÉO DO SERVI√áO"
    echo "------------------------------------------------------"

    echo "üöÄ Iniciando **${title}**..."
    # A linha 'exec' substitui o processo shell atual pelo DBAccess, mantendo o PID 1 no container.
    exec "${progbin}"