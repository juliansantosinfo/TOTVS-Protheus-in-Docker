#
# TOTVS Protheus with PostgreSQL
#
# To run:
# 1. Copy .env.example to .env and set your variables
# 2. docker compose -f docker-compose-postgresql.yaml -p totvs up -d
#
version: "3.8"

services:
  postgres:
    image: juliansantosinfo/totvs_postgres:12.1.2410
    container_name: totvs_postgres
    build:
      context: ./postgres
      dockerfile: dockerfile
    user: root # Required by setup scripts
    restart: always
    ports:
      - "24432:5432" # Mapped to 24432 to avoid conflicts with local postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      TZ: ${TZ}
    volumes:
      - totvs_postgres_data:/var/lib/postgresql/data
    networks:
      - totvs
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d protheus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  licenseserver:
    image: juliansantosinfo/totvs_licenseserver:3.6.2
    container_name: totvs_licenseserver
    build:
      context: ./licenseserver
      dockerfile: dockerfile
    restart: always
    # ports:
    #   - "2234:2234"
    #   - "5555:5555"
    #   - "8020:8020"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      LICENSE_TCP_PORT: ${LICENSE_TCP_PORT}
      LICENSE_CONSOLEFILE: ${LICENSE_CONSOLEFILE}
      LICENSE_PORT: ${LICENSE_PORT}
      LICENSE_WEBAPP_PORT: ${LICENSE_WEBAPP_PORT}
      TZ: ${TZ}
    networks:
      - totvs

  dbaccess:
    image: juliansantosinfo/totvs_dbaccess:24.1.0.0
    container_name: totvs_dbaccess
    build:
      context: ./dbaccess
      dockerfile: dockerfile
    restart: always
    # ports:
    #   - "7890:7890"
    #   - "7891:7891"
    environment:
      DATABASE_PROFILE: POSTGRES
      DATABASE_SERVER: totvs_postgres
      DATABASE_PORT: 5432
      DATABASE_ALIAS: protheus
      DATABASE_NAME: protheus
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DBACCESS_LICENSE_SERVER: totvs_licenseserver
      DBACCESS_LICENSE_PORT: 5555
      DBACCESS_CONSOLEFILE: /totvs/dbaccess/multi/dbconsole.log
      TZ: ${TZ}
    networks:
      - totvs
    depends_on:
      postgres:
        condition: service_healthy
      licenseserver:
        condition: service_started
    healthcheck:
      test: ["CMD", "isql", "-b", "${DATABASE_ALIAS}", "postgres", "${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  appserver:
    image: juliansantosinfo/totvs_appserver:12.1.2410
    container_name: totvs_appserver
    build:
      context: ./appserver
      dockerfile: dockerfile
    restart: always
    ports:
      - "24001:24001" # AppServer Port
      - "24002:24002" # Web/Smartclient Port
      - "24080:24080" # Rest Port
      - "24088:24088" # Web Manager Port
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      APPSERVER_MODE: application
      APPSERVER_RPO_CUSTOM: /totvs/protheus/apo/custom.rpo
      APPSERVER_DBACCESS_DATABASE: POSTGRES
      APPSERVER_DBACCESS_SERVER: totvs_dbaccess
      APPSERVER_DBACCESS_PORT: 7890
      APPSERVER_DBACCESS_ALIAS: ${DATABASE_ALIAS}
      APPSERVER_CONSOLEFILE: /totvs/protheus/bin/appserver/appserver.log
      APPSERVER_MULTIPROTOCOLPORTSECURE: 0
      APPSERVER_MULTIPROTOCOLPORT: 1
      APPSERVER_LICENSE_SERVER: totvs_licenseserver
      APPSERVER_LICENSE_PORT: ${LICENSE_PORT}
      APPSERVER_PORT: 24001
      APPSERVER_WEB_PORT: 24002
      APPSERVER_REST_PORT: 24080
      APPSERVER_WEB_MANAGER: 24088
      EXTRACT_RESOURCES: "true"
      TZ: ${TZ}
    networks:
      - totvs
    # volumes:
      # Para utilizar arquivos personalizados de configuração (appserver.ini) e log (appserver.log), 
      # crie os diretórios e arquivos necessários e descomente as linhas abaixo.
      # - ./volume/2410/appserver/appserver.ini:/totvs/protheus/bin/appserver/appserver.ini
      # - ./volume/2410/appserver/appserver.log:/totvs/protheus/bin/appserver/appserver.log
      # - ./volume/2410/appserver/apo:/totvs/protheus/apo
      # - ./volume/2410/protheus_data:/totvs/protheus_data
    depends_on:
      licenseserver:
        condition: service_started
      dbaccess:
        condition: service_healthy

  apprest:
    image: juliansantosinfo/totvs_appserver:12.1.2410
    container_name: totvs_apprest
    build:
      context: ./appserver
      dockerfile: dockerfile
    profiles:
      - full
    restart: always
    ports:
      - "24101:24101" # AppServer Port
      - "24102:24102" # Web/Smartclient Port
      - "24180:24180" # REST Port
      - "24188:24188" # Web Manager Port
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      APPSERVER_MODE: rest
      APPSERVER_RPO_CUSTOM: /totvs/protheus/apo/custom.rpo
      APPSERVER_DBACCESS_DATABASE: POSTGRES
      APPSERVER_DBACCESS_SERVER: totvs_dbaccess
      APPSERVER_DBACCESS_PORT: 7890
      APPSERVER_DBACCESS_ALIAS: ${DATABASE_ALIAS}
      APPSERVER_CONSOLEFILE: /totvs/protheus/bin/appserver/appserver.log
      APPSERVER_MULTIPROTOCOLPORTSECURE: 0
      APPSERVER_MULTIPROTOCOLPORT: 1
      APPSERVER_LICENSE_SERVER: totvs_licenseserver
      APPSERVER_LICENSE_PORT: ${LICENSE_PORT}
      APPSERVER_PORT: 24101
      APPSERVER_WEB_PORT: 24102
      APPSERVER_REST_PORT: 24180
      APPSERVER_WEB_MANAGER: 24188
      EXTRACT_RESOURCES: "true"
      TZ: ${TZ}
    networks:
      - totvs
    # volumes:
      # Para utilizar arquivos personalizados de configuração (appserver.ini) e log (appserver.log), 
      # crie os diretórios e arquivos necessários e descomente as linhas abaixo.
      # - ./volume/2410/apprest/appserver.ini:/totvs/protheus/bin/appserver/appserver.ini
      # - ./volume/2410/apprest/appserver.log:/totvs/protheus/bin/appserver/appserver.log
      # - ./volume/2410/apprest/apo:/totvs/protheus/apo
      # - ./volume/2410/protheus_data:/totvs/protheus_data
    depends_on:
      licenseserver:
        condition: service_started
      dbaccess:
        condition: service_healthy

volumes:
  totvs_postgres_data:
    driver: local

networks:
  totvs:
    driver: bridge
