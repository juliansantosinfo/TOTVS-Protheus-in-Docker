#!/bin/bash
# entrypoint.sh

# Garante que o script ser√° encerrado em caso de erro
set -e

######################################################################
# SCRIPT:      entrypoint.sh
# DESCRI√á√ÉO:   Ponto de entrada do container PostgreSQL.
#              Configura√ß√µes de localiza√ß√£o (locale), inicializa√ß√£o 
#              da estrutura de dados do banco e delega para o 
#              entrypoint oficial do PostgreSQL.
# AUTOR:       Julian de Almeida Santos
# DATA:        2025-10-19
#
######################################################################

# ---------------------------------------------------------------------

## üöÄ VARI√ÅVEIS DE CONFIGURA√á√ÉO

  DB_DATA_DIR="/var/lib/postgresql/data"
  DB_BACKUP_FILE="/tmp/data.tar.gz"

# ---------------------------------------------------------------------

## üöÄ CONFIGURA√á√ÉO DE LOCALIZA√á√ÉO (LOCALE)

  echo ""
  echo "------------------------------------------------------"
  echo "üåê CONFIGURA√á√ÉO DE LOCALIZA√á√ÉO (LOCALE)"
  echo "------------------------------------------------------"

  echo "‚öôÔ∏è Configurando locale pt_BR para CP1252 e ISO-8859-1..."
  localedef -i pt_BR -f CP1252 pt_BR.cp1252
  localedef -i pt_BR -f ISO-8859-1 pt_BR.ISO-8859-1
  echo "‚úÖ Locales configurados."

# ---------------------------------------------------------------------

## üöÄ INICIALIZA√á√ÉO DA ESTRUTURA DE DADOS DO BANCO

  echo ""
  echo "------------------------------------------------------"
  echo "üíæ INICIALIZA√á√ÉO DA ESTRUTURA DE DADOS DO BANCO"
  echo "------------------------------------------------------"

  # Cria o diret√≥rio de dados se n√£o existir
  mkdir -p "${DB_DATA_DIR}"
  echo "‚úÖ Diret√≥rio de dados **${DB_DATA_DIR}** verificado/criado."

  # Verifica se o diret√≥rio de dados est√° vazio (primeira execu√ß√£o)
  if [ ! "$(ls -A "${DB_DATA_DIR}")" ]; then
    echo "‚öôÔ∏è Diret√≥rio de dados vazio. Iniciando extra√ß√£o dos arquivos base..."

    if [ -f "${DB_BACKUP_FILE}" ]; then
      tar -xzvf "${DB_BACKUP_FILE}" -C /
      echo "‚úÖ Arquivos base extra√≠dos com sucesso."

      rm -rfv "${DB_BACKUP_FILE}"
      echo "üóëÔ∏è Arquivo de backup tempor√°rio removido."
    else
      echo "‚ö†Ô∏è Arquivo de backup **${DB_BACKUP_FILE}** n√£o encontrado. Iniciando com dados vazios."
    fi
  else
    echo "‚è≠Ô∏è Diret√≥rio de dados j√° cont√©m arquivos. Pulando inicializa√ß√£o."
  fi

# ---------------------------------------------------------------------

## üöÄ INICIALIZA√á√ÉO DO SERVI√áO (ENTRYPOINT OFICIAL)

  echo ""
  echo "------------------------------------------------------"
  echo "üöÄ INICIALIZA√á√ÉO DO SERVI√áO (VIA ENTRYPOINT OFICIAL)"
  echo "------------------------------------------------------"

  echo "üöÄ Delegando execu√ß√£o para o entrypoint oficial do PostgreSQL..."
  # Chama o entrypoint original do PostgreSQL, mantendo o PID 1 no container.
  exec docker-entrypoint.sh "$@"