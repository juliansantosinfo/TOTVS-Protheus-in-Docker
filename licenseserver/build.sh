#!/bin/bash
#
# ==============================================================================
# SCRIPT: build.sh (Vers√£o Final e Completa)
# DESCRI√á√ÉO: Respons√°vel por realizar o build da imagem Docker para o servi√ßo DBAccess
#            TOTVS e restaurar ou atualizar depend√™ncias da aplica√ß√£o.
# AUTOR: Julian de Almeida Santos
# DATA: 2025-10-12
# USO: ./build.sh [plain | auto | tty]
#      - Argumento 1 (progress): Controla o formato do output do Docker (padr√£o: auto).
# ==============================================================================

# --- Configura√ß√£o de Robustez (Boas Pr√°ticas Bash) ---
# -e: Sai imediatamente se um comando falhar.
# -u: Trata vari√°veis n√£o definidas como erro.
# -o pipefail: Garante que um pipeline (ex: cat | tar) falhe se qualquer comando falhar.
set -euo pipefail

# --- Vari√°veis de Configura√ß√£o Global ---
readonly REQUIRED_DIR_NAME="licenseserver"
readonly TOTVS_DIR="./totvs"

# --- Componentes da Docker Tag (Separados para f√°cil manuten√ß√£o) ---
readonly DOCKER_USER="juliansantosinfo"
readonly DOCKER_IMAGE_NAME="totvs_licenseserver"
readonly DOCKER_IMAGE_TAG="3.6.1"
readonly DOCKER_TAG="${DOCKER_USER}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"

# Argumento 1: Modo de Progresso do Docker Build (padr√£o: auto)
# Se n√£o for fornecido, usa 'auto'. Se for fornecido, usa o valor, convertido para min√∫sculas.
DOCKER_PROGRESS_MODE="${1:-auto}"
DOCKER_PROGRESS_MODE=$(echo "$DOCKER_PROGRESS_MODE" | tr '[:upper:]' '[:lower:]')

# ----------------------------------------------------
#               SE√á√ÉO 0: VALIDA√á√ÉO E ACESSO AO DIRET√ìRIO
# ----------------------------------------------------

# Obt√©m o nome do diret√≥rio atual.
CURRENT_DIR_NAME=$(basename "$PWD")

echo "üéØ Verificando o ambiente de execu√ß√£o..."

# 1. Verifica se j√° estamos no diret√≥rio correto.
if [ "$CURRENT_DIR_NAME" == "$REQUIRED_DIR_NAME" ]; then
    echo "‚úÖ Diret√≥rio validado: Executando em '$CURRENT_DIR_NAME'."

# 2. Verifica se o subdiret√≥rio 'appserver' existe no local atual.
elif [ -d "$REQUIRED_DIR_NAME" ]; then
    echo "‚û°Ô∏è Diret√≥rio '$REQUIRED_DIR_NAME' encontrado. Acessando..."
    # Acessa o diret√≥rio. O 'set -e' garantir√° que o script pare se o 'cd' falhar.
    cd "$REQUIRED_DIR_NAME"
    echo "‚úÖ Movido com sucesso. Diret√≥rio atual: $(basename "$PWD")"

# 3. Caso contr√°rio, √© um erro.
else
    echo "üö® ERRO DE AMBIENTE: Este script deve ser executado *dentro* do diret√≥rio **'$REQUIRED_DIR_NAME'** ou em um diret√≥rio que o **contenha**." >&2
    echo "    Diret√≥rio atual: '$CURRENT_DIR_NAME'" >&2
    echo "    Por favor, corrija sua localiza√ß√£o e tente novamente." >&2
    exit 1 # Sai com c√≥digo de erro.
fi

# ----------------------------------------------------
#               SE√á√ÉO 1: PREPARA√á√ÉO DOS RECURSOS
# ----------------------------------------------------

echo "üöÄ Iniciando processo de build..."
echo "‚ÑπÔ∏è Docker Tag Completa: $DOCKER_TAG"
echo "‚ÑπÔ∏è Docker Progress Mode: $DOCKER_PROGRESS_MODE"
echo "üîç Verificando o diret√≥rio '${TOTVS_DIR}'..."

# Verifica se os recursos existem.
while [ ! -d "./totvs/licenseserver" ]; do
    echo "‚è≥ Diret√≥rio n√£o encontrado. Executando setup..."
    
    # Executa o setup.sh a partir do diret√≥rio onde ele est√° localizado
    current_directory=$(pwd)
    cd ../
    ./scripts/setup.sh licenseserver
    cd "$current_directory"

    # Pequena pausa para evitar loop excessivo
    sleep 2
done

if [  -d "./totvs/licenseserver" ]; then
    echo "‚úÖ Diret√≥rio 'licenseserver' localizado."
else
    echo "‚ùå Erro: Diret√≥rio 'licenseserver' n√£o encontrado."
    exit 1
fi

# ----------------------------------------------------
#               SE√á√ÉO 2: EXECU√á√ÉO DO DOCKER BUILD
# ----------------------------------------------------

echo "üê≥ Iniciando Docker build..."
# Executa o comando docker build, usando as flags para um build limpo e output leg√≠vel.
# Usa a vari√°vel $DOCKER_TAG reconstru√≠da.
docker build --progress="$DOCKER_PROGRESS_MODE" -t "$DOCKER_TAG" .
echo "‚úÖ Docker build finalizado com sucesso. Imagem: $DOCKER_TAG"

echo "‚úÖ Processo de build finalizado com sucesso!"